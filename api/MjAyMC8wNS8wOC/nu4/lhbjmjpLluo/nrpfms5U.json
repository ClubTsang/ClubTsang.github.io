{"title":"经典排序算法汇总","date":"2020-05-07T16:00:00.000Z","date_formatted":{"ll":"May 8, 2020","L":"05/08/2020","MM-DD":"05-08"},"thumbnail":"/static/img/articles/00001.jpg","link":"2020/05/08/经典排序算法","tags":["排序"],"categories":["排序"],"updated":"2021-05-06T16:09:15.624Z","content":"<h2 id=\"冒泡排序（bubble-sort）\">冒泡排序（Bubble Sort）<a title=\"#冒泡排序（bubble-sort）\" href=\"#冒泡排序（bubble-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//冒泡排序 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">BubbleSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || r - l &lt; <span class=\"hljs-number\">1</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">bool</span> b = <span class=\"hljs-literal\">true</span>;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> end = r; <span class=\"hljs-literal\">true</span> &amp;&amp; end &gt; l; --end)<br>    &#123;<br>        b = <span class=\"hljs-literal\">false</span>;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = l; i &lt; end; ++i)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span> (A[i] &gt; A[i + <span class=\"hljs-number\">1</span>])<br>            &#123;<br>                b = <span class=\"hljs-literal\">true</span>;<br>                <span class=\"hljs-keyword\">int</span> temp = A[i];<br>                A[i] = A[i + <span class=\"hljs-number\">1</span>];<br>                A[i + <span class=\"hljs-number\">1</span>] = temp;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"选择排序（selction-sort）\">选择排序（Selction Sort）<a title=\"#选择排序（selction-sort）\" href=\"#选择排序（selction-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//选择排序 ---&gt; 把数weiz组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SelctionSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || r - l &lt; <span class=\"hljs-number\">1</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = l; i &lt; r; ++i)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> minIndex = i;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = i + <span class=\"hljs-number\">1</span>; j &lt;= r; ++j)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span> (A[minIndex] &gt; A[j])<br>            &#123;<br>                minIndex = j;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (minIndex != i)<br>        &#123;<br>            <span class=\"hljs-keyword\">int</span> temp = A[i];<br>            A[i] = A[minIndex];<br>            A[minIndex] = temp;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"插入排序（insertion-sort）\">插入排序（Insertion Sort）<a title=\"#插入排序（insertion-sort）\" href=\"#插入排序（insertion-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//插入排序 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">InsertionSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || r - l &lt; <span class=\"hljs-number\">1</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = l; i &lt;= r; ++i)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> temp = A[i];<br>        <span class=\"hljs-keyword\">int</span> j = i - <span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-keyword\">for</span> (j; j &gt;= l &amp;&amp; temp &lt; A[j]; --j)<br>        &#123;<br>            A[j + <span class=\"hljs-number\">1</span>] = A[j];<br>        &#125;<br>        A[j + <span class=\"hljs-number\">1</span>] = temp;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"希尔排序（shell-sort）\">希尔排序（Shell Sort）<a title=\"#希尔排序（shell-sort）\" href=\"#希尔排序（shell-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 希尔排序</span><br><span class=\"hljs-comment\"> * 希尔排序目的为了加快速度改进了插入排序，交换不相邻的元素对数组的局部进行排序，并最终用插入排序将局部有序的数组排序。</span><br><span class=\"hljs-comment\"> * */</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ShellSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || r - l &lt; <span class=\"hljs-number\">1</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">int</span> size = r - l + <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">int</span> gap = size / <span class=\"hljs-number\">2</span>;<br>    <span class=\"hljs-keyword\">while</span> (gap &gt; <span class=\"hljs-number\">0</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = l + gap; i &lt;= r; ++i)<br>        &#123;<br>            <span class=\"hljs-keyword\">int</span> j = i;<br>            <span class=\"hljs-keyword\">int</span> temp = A[j];<br>            <span class=\"hljs-keyword\">for</span> (j; j - gap &gt;= l &amp;&amp; A[j - gap] &gt; temp; j -= gap)<br>            &#123;<br>                A[j] = A[j - gap];<br>            &#125;<br>            A[j] = temp;<br>        &#125;<br>        gap /= <span class=\"hljs-number\">2</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"快速排序（quick-sort）\">快速排序（Quick Sort）<a title=\"#快速排序（quick-sort）\" href=\"#快速排序（quick-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//快速排序 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">QuickSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (l &lt; r &amp;&amp; <span class=\"hljs-literal\">NULL</span> != A)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> low = l, high = r;<br>        <span class=\"hljs-keyword\">int</span> target = A[l];<br>        <span class=\"hljs-keyword\">while</span> (low &lt; high)<br>        &#123;<br>            <span class=\"hljs-keyword\">while</span> (low &lt; high &amp;&amp; A[high] &gt;= target)<br>            &#123;<br>                --high;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (low &lt; high)<br>            &#123;<br>                A[low++] = A[high];<br>            &#125;<br>            <span class=\"hljs-keyword\">while</span> (low &lt; high &amp;&amp; A[low] &lt;= target)<br>            &#123;<br>                ++low;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (low &lt; high)<br>            &#123;<br>                A[high--] = A[low];<br>            &#125;<br>        &#125;<br>        A[low] = target;<br>        <span class=\"hljs-built_in\">QuickSort</span>(A, l, low - <span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-built_in\">QuickSort</span>(A, high + <span class=\"hljs-number\">1</span>, r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//快速排序之基于荷兰国旗排序改进 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">QuickSort_Improve</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-comment\">//基于荷兰国旗排序的改进的快速排序</span><br>    <span class=\"hljs-keyword\">if</span> (l &lt; r &amp;&amp; <span class=\"hljs-literal\">NULL</span> != A)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> low = l - <span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-keyword\">int</span> high = r + <span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-keyword\">int</span> cur = l;<br><br>        <span class=\"hljs-keyword\">int</span> target = A[cur];<br>        <span class=\"hljs-keyword\">while</span> (cur &lt; high)<br>        &#123;<br>            <span class=\"hljs-keyword\">while</span> (cur &lt; high &amp;&amp; A[cur] == target)<br>            &#123;<br>                ++cur;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (cur &lt; high &amp;&amp; A[cur] &lt; target)<br>            &#123;<br>                A[++low] = A[cur];<br>                A[cur++] = target;<br>                <span class=\"hljs-keyword\">continue</span>;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (cur &lt; high &amp;&amp; A[cur] &gt; target)<br>            &#123;<br>                <span class=\"hljs-keyword\">int</span> temp = A[--high];<br>                A[high] = A[cur];<br>                A[cur] = temp;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-built_in\">QuickSort_Improve</span>(A, l, low);<br>        <span class=\"hljs-built_in\">QuickSort_Improve</span>(A, high, r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"堆排序（heap-sort）\">堆排序（Heap Sort）<a title=\"#堆排序（heap-sort）\" href=\"#堆排序（heap-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//堆排序 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">HeapSort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> n)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || n &lt; <span class=\"hljs-number\">2</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> end = n - <span class=\"hljs-number\">1</span>; end &gt; <span class=\"hljs-number\">0</span>; --end)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> temp;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = (end + <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; --i)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">2</span> &lt;= end &amp;&amp; A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">2</span>] &gt; A[i])<br>            &#123;<br>                temp = A[i];<br>                A[i] = A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">2</span>];<br>                A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">2</span>] = temp;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">1</span>] &gt; A[i])<br>            &#123;<br>                temp = A[i];<br>                A[i] = A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">1</span>];<br>                A[<span class=\"hljs-number\">2</span> * i + <span class=\"hljs-number\">1</span>] = temp;<br>            &#125;<br>        &#125;<br>        temp = A[<span class=\"hljs-number\">0</span>];<br>        A[<span class=\"hljs-number\">0</span>] = A[end];<br>        A[end] = temp;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"归并排序（merge-sort）\">归并排序（Merge Sort）<a title=\"#归并排序（merge-sort）\" href=\"#归并排序（merge-sort）\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//归并 ---&gt; 把数组A,从位置l到位置r进行归并</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Merge_1</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> mid, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">NULL</span> == A || l &gt;= r)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">int</span> *help = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[r - l + <span class=\"hljs-number\">1</span>];<br>    <span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">int</span> low = l;<br>    <span class=\"hljs-keyword\">int</span> high = mid + <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span> (low &lt;= mid &amp;&amp; high &lt;= r)<br>    &#123;<br>        help[i++] = A[low] &lt; A[high] ? A[low++] : A[high++];<br>    &#125;<br>    <span class=\"hljs-keyword\">while</span> (low &lt;= mid)<br>    &#123;<br>        help[i++] = A[low++];<br>    &#125;<br>    <span class=\"hljs-keyword\">while</span> (high &lt;= r)<br>    &#123;<br>        help[i++] = A[high++];<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; r - l + <span class=\"hljs-number\">1</span>; i++)<br>    &#123;<br>        A[l + i] = help[i];<br>    &#125;<br>    <span class=\"hljs-keyword\">delete</span> help;<br>    help = <span class=\"hljs-literal\">NULL</span>;<br>&#125;<br><br><span class=\"hljs-comment\">//归并排序 ---&gt; 递归实现 ---&gt; 把数组A,从位置l到位置r进行排序</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MergeSort_1</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> A[], <span class=\"hljs-keyword\">int</span> l, <span class=\"hljs-keyword\">int</span> r)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (l &lt; r)<br>    &#123;<br>        <span class=\"hljs-keyword\">int</span> mid = l + (r - l) / <span class=\"hljs-number\">2</span>;<br>        <span class=\"hljs-built_in\">MergeSort_1</span>(A, l, mid);<br>        <span class=\"hljs-built_in\">MergeSort_1</span>(A, mid + <span class=\"hljs-number\">1</span>, r);<br>        <span class=\"hljs-built_in\">Merge_1</span>(A, l, mid, r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>","prev":{"title":"二叉树（Binary tree）序列化与反序列化","link":"2020/08/08/二叉树序列化与反序列化"},"plink":"https://TOPUBLICZX.GITHUB.IO/2020/05/08/经典排序算法/","toc":[{"id":"冒泡排序（bubble-sort）","title":"冒泡排序（Bubble Sort）","index":"1"},{"id":"选择排序（selction-sort）","title":"选择排序（Selction Sort）","index":"2"},{"id":"插入排序（insertion-sort）","title":"插入排序（Insertion Sort）","index":"3"},{"id":"希尔排序（shell-sort）","title":"希尔排序（Shell Sort）","index":"4"},{"id":"快速排序（quick-sort）","title":"快速排序（Quick Sort）","index":"5"},{"id":"堆排序（heap-sort）","title":"堆排序（Heap Sort）","index":"6"},{"id":"归并排序（merge-sort）","title":"归并排序（Merge Sort）","index":"7"}],"reward":true,"copyright":{"author":"CLUB TSANG","link":"<a href=\"https://TOPUBLICZX.GITHUB.IO/2020/05/08/经典排序算法/\" title=\"经典排序算法汇总\">https://TOPUBLICZX.GITHUB.IO/2020/05/08/经典排序算法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}