{"title":"1862.Excel排序","date":"2020-04-30T16:00:00.000Z","date_formatted":{"ll":"May 1, 2020","L":"05/01/2020","MM-DD":"05-01"},"updated":"2021-05-06T17:30:10.202Z","content":"<h2 id=\"1、&lt;a-href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1862&quot;-target=&quot;_blank&quot;&gt;problem-description&lt;/a&gt;\">1、<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=1862\" target=\"_blank\">Problem Description</a><a title=\"#1、&lt;a-href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1862&quot;-target=&quot;_blank&quot;&gt;problem-description&lt;/a&gt;\" href=\"#1、&lt;a-href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1862&quot;-target=&quot;_blank&quot;&gt;problem-description&lt;/a&gt;\"></a></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">Excel可以对一组纪录按任意指定列排序。现请你编写程序实现类似功能。<br></code></pre></td></tr></table></figure>\n<h2 id=\"2、input\">2、Input<a title=\"#2、input\" href=\"#2、input\"></a></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">测试输入包含若干测试用例。每个测试用例的第1行包含两个整数 N (&lt;=100000) 和 C，<br>其中 N 是纪录的条数，C 是指定排序的列号。以下有N行，每行包含一条学生纪录。<br>每条学生纪录由学号（6位数字，同组测试中没有重复的学号）、<br>姓名（不超过8位且不包含空格的字符串）、<br>成绩（闭区间[0, 100]内的整数）组成，每个项目间用1个空格隔开。<br>当读到 N=0 时，全部输入结束，相应的结果不要输出。<br></code></pre></td></tr></table></figure>\n<h2 id=\"3、output\">3、Output<a title=\"#3、output\" href=\"#3、output\"></a></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">对每个测试用例，首先输出1行“Case i:”，其中 i 是测试用例的编号（从1开始）。<br>随后在 N 行中输出按要求排序后的结果，<br>即：当 C=1 时，按学号递增排序；<br>当 C=2时，按姓名的非递减字典序排序；当 C=3时，按成绩的非递减排序。<br>当若干学生具有相同姓名或者相同成绩时，则按他们的学号递增排序。<br></code></pre></td></tr></table></figure>\n<h2 id=\"4、sample-input\">4、Sample Input<a title=\"#4、sample-input\" href=\"#4、sample-input\"></a></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">3 1<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>4 2<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>000002 James 98<br>4 3<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>000002 James 90<br>0 0<br></code></pre></td></tr></table></figure>\n<h2 id=\"5、sample-output\">5、Sample Output<a title=\"#5、sample-output\" href=\"#5、sample-output\"></a></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">Case 1:<br>000001 Zoe 60<br>000007 James 85<br>000010 Amy 90<br>Case 2:<br>000010 Amy 90<br>000002 James 98<br>000007 James 85<br>000001 Zoe 60<br>Case 3:<br>000001 Zoe 60<br>000007 James 85<br>000002 James 90<br>000010 Amy 90<br></code></pre></td></tr></table></figure>\n<h2 id=\"6、submit\">6、Submit<a title=\"#6、submit\" href=\"#6、submit\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;algorithm&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Student</span></span><br><span class=\"hljs-class\">&#123;</span><br>    <span class=\"hljs-keyword\">char</span> SNO[<span class=\"hljs-number\">7</span>];<br>    <span class=\"hljs-keyword\">char</span> SNAME[<span class=\"hljs-number\">9</span>];<br>    <span class=\"hljs-keyword\">int</span> GRADE;<br>&#125;;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Student</span> <span class=\"hljs-title\">S</span>[100000];</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MyInput</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    cin&gt;&gt;S[i].SNO&gt;&gt;S[i].SNAME&gt;&gt;S[i].GRADE;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MyOutput</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    cout &lt;&lt; S[i].SNO &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span> &lt;&lt; S[i].SNAME &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span> &lt;&lt; S[i].GRADE &lt;&lt; endl;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MySort</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> N, <span class=\"hljs-keyword\">int</span> C)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (N &lt; <span class=\"hljs-number\">1</span> || N &gt; <span class=\"hljs-number\">100000</span>)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">if</span> (C == <span class=\"hljs-number\">1</span>)<br>    &#123;<br>        <span class=\"hljs-built_in\">sort</span>(S, S + N, [](struct Student &amp;s1, struct Student &amp;s2) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">strcmp</span>(s1.SNO, s2.SNO) &lt; <span class=\"hljs-number\">0</span>;<br>        &#125;);<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">if</span> (C == <span class=\"hljs-number\">2</span>)<br>    &#123;<br>        <span class=\"hljs-built_in\">sort</span>(S, S + N, [](struct Student &amp;s1, struct Student &amp;s2) &#123;<br>            <span class=\"hljs-keyword\">int</span> cmp = <span class=\"hljs-built_in\">strcmp</span>(s1.SNAME, s2.SNAME);<br>            <span class=\"hljs-keyword\">return</span> cmp &lt; <span class=\"hljs-number\">0</span> || cmp == <span class=\"hljs-number\">0</span> &amp;&amp; <span class=\"hljs-built_in\">strcmp</span>(s1.SNO, s2.SNO) &lt; <span class=\"hljs-number\">0</span>;<br>        &#125;);<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">if</span> (C == <span class=\"hljs-number\">3</span>)<br>    &#123;<br>        <span class=\"hljs-built_in\">sort</span>(S, S + N, [](struct Student &amp;s1, struct Student &amp;s2) &#123;<br>            <span class=\"hljs-keyword\">return</span> s1.GRADE &lt; s2.GRADE || s1.GRADE == s2.GRADE &amp;&amp; <span class=\"hljs-built_in\">strcmp</span>(s1.SNO, s2.SNO) &lt; <span class=\"hljs-number\">0</span>;<br>        &#125;);<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> N = <span class=\"hljs-number\">1</span>, C;<br>    <span class=\"hljs-keyword\">int</span> index = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span> (N)<br>    &#123;<br>        cin &gt;&gt; N &gt;&gt; C;<br><br>        <span class=\"hljs-keyword\">if</span> (N &lt; <span class=\"hljs-number\">1</span> || N &gt; <span class=\"hljs-number\">100000</span>)<br>        &#123;<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; N; ++i)<br>        &#123;<br>            <span class=\"hljs-built_in\">MyInput</span>(i);<br>        &#125;<br><br>        <span class=\"hljs-built_in\">MySort</span>(N, C);<br>        <br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Case &quot;</span> &lt;&lt; index++ &lt;&lt; <span class=\"hljs-string\">&quot;:&quot;</span> &lt;&lt; endl;<br>        <br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; N; ++j)<br>        &#123;<br>            <span class=\"hljs-built_in\">MyOutput</span>(j);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n","link":"notes/hduoj/1862-Excel排序","plink":"https://TOPUBLICZX.GITHUB.IO/notes/hduoj/1862-Excel排序/","toc":[{"id":"1、<a-href=\"http://acm.hdu.edu.cn/showproblem.php?pid=1862\"-target=\"_blank\">problem-description</a>","title":"1、Problem Description","index":"1"},{"id":"2、input","title":"2、Input","index":"2"},{"id":"3、output","title":"3、Output","index":"3"},{"id":"4、sample-input","title":"4、Sample Input","index":"4"},{"id":"5、sample-output","title":"5、Sample Output","index":"5"},{"id":"6、submit","title":"6、Submit","index":"6"}],"reward":true,"copyright":{"author":"CLUB TSANG","link":"<a href=\"https://TOPUBLICZX.GITHUB.IO/notes/hduoj/1862-Excel排序/\" title=\"1862.Excel排序\">https://TOPUBLICZX.GITHUB.IO/notes/hduoj/1862-Excel排序/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}